var documenterSearchIndex = {"docs":
[{"location":"#SHTnsSpheres","page":"Home","title":"SHTnsSpheres","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for SHTnsSpheres.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#SHTnsSpheres.SHTnsSphere","page":"Home","title":"SHTnsSpheres.SHTnsSphere","text":"sph = SHTnsSphere(nlat, nthreadsThreads.nthreads())\n\nReturns a SHTnsSphere corresponding to a lat-lon mesh of size nlat×2nlat and spectral truncation 2nlat/3 (i.e. T21 and 32×64 for nlat=32)\n\n\n\n\n\n","category":"type"},{"location":"#SHTnsSpheres.Writable","page":"Home","title":"SHTnsSpheres.Writable","text":"Wraps data to mark it as writeable.\n\n\n\n\n\n","category":"type"},{"location":"#SHTnsSpheres.erase-Tuple{Any}","page":"Home","title":"SHTnsSpheres.erase","text":"y = erase(x)\n\nSome functions need to make copies of input arguments to avoid modifying their contents and remain pure. Passing erase(x) as input argument is equivalent to passing x, except that it explicitly allows to modify the contents of x, thus avoiding copying and allocating.\n\n\n\n\n\n","category":"method"},{"location":"#SHTnsSpheres.readable-Tuple{Any}","page":"Home","title":"SHTnsSpheres.readable","text":"Unwrap input argument. Used internally when we can promise that x will not be modified.\n\n\n\n\n\n","category":"method"},{"location":"#SHTnsSpheres.shtns_use_threads","page":"Home","title":"SHTnsSpheres.shtns_use_threads","text":"num_threads = shtns_use_threads(num_threads)\n\nCall before any initialization of shtns to use mutliple threads. Returns the actual number of threads.     If numthreads > 0, specifies the maximum number of threads that should be used.     If numthreads <= 0, maximum number of threads is automatically set to the number of processors.     If num_threads == 1, openmp will be disabled.\n\n\n\n\n\n","category":"function"},{"location":"#SHTnsSpheres.writable-Tuple{Any}","page":"Home","title":"SHTnsSpheres.writable","text":"Unwrap input argument. Used internally when we cannot promise that x will not be modified.\n\n\n\n\n\n","category":"method"}]
}
